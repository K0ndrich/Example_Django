# Docker-Compose
# Позволяет собирать и управлять несколькими контейнерами одновременно
# В Каждой Контейнере что-то лежит (React , PostgreSQL , Redis)

# указываем какую вресию docker-compose будем использовать
version: "3.9"

# хранит наши контейнры(сервисы)
services:
  # добавляем PostrgeSQL
  # хранит название нашего блока
  postgres:
    # берем образ postgres для нашего текущего контейнера
    # :latest указывает что берем последнюю версью образа postgres
    image: postgres:latest
    # указываем название для контейнера
    container_name: postgres
    # подключеные к уже ранне созданой базе postgreSQL
    environment:
      # создаем пользователя подключеного к базе
      POSTGRES_USER: postgres
      # для етого пользоватя(kondrich) создаеться пароль для входа 
      POSTGRES_PASSWORD: 1856
      # указываем имя для нашей базы данных
      POSTGRES_DB: postgres

    # соединяеть текущий контейнер(сервис) с локальной машинной на которой етот контейнер будет работать
    # называеться маппинг портов
    ports:
      # порт локальной машины : порт текущего контейнера
      - "5432:5432"

  # внутри сервиса my_django храниться наш django-проект
  my_django:
    # build указывает на каком docker-образе будем строить наш текущий контейнер
    build:
      # context указывает путь к нашему Dockerfile откуда будем брать наш docker-образ
      context: .
    # соединяем текущий контейнер(сервис) с локальной машиной, где лежит наш django-проект 
    ports:
      # порт локальной машины : порт текущего контейнера
      - "8001:8000"
    # указывает какие контейнеры должны запуститься перед запуском текущего контенера для нормальной работы текущего
    # указываем название сервисом от которым зависит текущий сервис
    depends_on:
      - postgres
    # по той причине что наш файл .env не попадает в docker-образ, переменные окружения для django-проекта нужно указывать вручную
    # переменные и значение берем из файлика .env
    environment:
      DEBUG: "False"
      DB_NAME: "postgres"
      DB_USER: "postgres"
      DB_PASSWORD: "1856"
      # для DB_HOST берем значение из container_name сервиса postgres_db
      DB_HOST: "postgres"
      DB_PORT: "5432" 